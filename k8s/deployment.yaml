apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-tp-config
  namespace: k6
data:
  config: |
    const config = {
      scenarios: {
        homepage: {
          executor: 'constant-vus',
          vus: 1,
          duration: '1m',
          gracefulStop: '0s',
          tags: { test_type: 'homepage' },
          exec: 'homePageScenario',
        },
      },
      batchPerHost: 6,
      thresholds: { 
        http_req_connecting: ['p(90) > 3000'],
        http_req_waiting: ['p(90) > 1000']
      },
      //discardResponseBodies: true,
      //duration: '3m', // without WM
      //iterations: 10,
      //httpDebug: 'full',
      //noConnectionReuse: true,
      //rps: 500,
    }

    module.exports = {
      config
    }
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: k6
  namespace: k6
spec:
  selector:
    matchLabels:
      app: k6
  serviceName: "generator"
  replicas: 2
  template:
    metadata:
      labels:
        app: k6
        test: load
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: "In"
                  values: [ "k6" ]
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: k6
        image: quay.io/rdpanek/k6:1.0.3
        env:
        - name: GIT_REVISION
          value: "5d00086"
        - name: TEST_PLAN_NAME
          value: "baseline.js"
        - name: GIT_TEST_REPOSITORY
          valueFrom:
            configMapKeyRef:
              name: k6-config
              key: git.test.repository
        - name: ENV_PRINT
          value: "allow"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "2Gi"
            cpu: "2"
        volumeMounts:
          - name: k6-tp-config
            mountPath: /home/k6/config/default.js
            subPath: config
            readOnly: true
        imagePullPolicy: "Always"
      volumes:
        - name: k6-tp-config
          configMap:
            name: k6-tp-config
            items:
              - key: config
                path: config